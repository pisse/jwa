//vars
$zindex:1;

// 圆角边框处理
@mixin borderRadius($px) {
    background-clip: padding-box;
    border-radius: $px;
}
@mixin borderOne($direction: 'bottom', $color: $jdBorder) {
    @include hidpi(1) {
        @if ($direction == 'bottom') {
            border-bottom: 1px solid $color;
        }@else if ($direction == 'top') {
            border-top: 1px solid $color;
        }@else if ($direction == 'left') {
            border-left: 1px solid $color;
        }@else if ($direction == 'right') {
            border-right: 1px solid $color;
        }@else if ($direction == 'all') {
            border: 1px solid $color;
        }
    }
    @include hidpi(2) {
        border: none;
        @if ($direction == 'bottom') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                bottom: -1px;
                left: 0;
                width: 100%;
                height: 1px;
                border-bottom: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleY(0.5));
            }
        }@else if ($direction == 'top') {
            position: relative;
            &:after {
                content: "";
                position: absolute;
                top: -1px;
                left: 0;
                width: 100%;
                height: 1px;
                border-top: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleY(0.5));
            }
        }@else if ($direction == 'left') {
            position: relative;
            &:after {
                content: "";
                position: absolute;
                left: -1px;
                width: 1%;
                height: 100%;
                border-left: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleX(0.5));
            }
        }@else if ($direction == 'right') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                right: -1px;
                width: 1%;
                height: 100%;
                border-right: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleX(0.5));
            }
        }@else if ($direction == 'all') {
            $color: darken($color, 30%);
            $rgba: rgba($color, 1);
            box-shadow: inset 0 1px 1px -1px $rgba,
            inset 1px 0 1px -1px $rgba,
            inset -1px 0 1px -1px $rgba,
            inset 0 -1px 1px -1px $rgba;
        }
    }
    @include hidpi(3) {
        border: none;
        @if ($direction == 'bottom') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                bottom: -1px;
                left: 0;
                width: 100%;
                height: 1px;
                border-bottom: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleY(0.33));
            }
        }@else if ($direction == 'top') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                top: -1px;
                left: 0;
                width: 100%;
                height: 1px;
                border-top: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleY(0.33));
            }
        }@else if ($direction == 'left') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                left: -1px;
                width: 1%;
                height: 100%;
                border-left: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleX(0.33));
            }
        }@else if ($direction == 'right') {
            position: relative;
            &:before {
                content: "";
                position: absolute;
                right: -1px;
                width: 1%;
                height: 100%;
                border-right: 1px solid $color;
                z-index: $zindex;
                @include transform(scaleX(0.33));
            }
        }@else if ($direction == 'all') {
            $color: darken($color, 30%);
            $rgba: rgba($color, 1);
            box-shadow: inset 0 1px 1px -1px $rgba,
            inset 1px 0 1px -1px $rgba,
            inset -1px 0 1px -1px $rgba,
            inset 0 -1px 1px -1px $rgba;
        }
    }
}


// Border Radius (Shorthand)
// Provides a shorthand syntax to target and add border radii to both corners on one side of a box

@mixin borderTopRadius($px) {
    border-top-left-radius: $px;
    border-top-right-radius: $px;
}

@mixin borderRightRadius($px) {
    border-bottom-right-radius: $px;
    border-top-right-radius: $px;
}

@mixin borderBottomRadius($px) {
    border-bottom-left-radius: $px;
    border-bottom-right-radius: $px;
}

@mixin borderLeftRadius($px) {
    border-bottom-left-radius: $px;
    border-top-left-radius: $px;
}