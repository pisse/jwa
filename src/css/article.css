@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/** 1. Set default font family to sans-serif. 2. Prevent iOS and IE text size adjust after device orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined for any HTML5 element in IE 8/9. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. Correct `block` display not defined for `main` in IE 11. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }

/** 1. Correct `inline-block` display not defined in IE 8/9. 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. */
audio, canvas, progress, video { display: inline-block; /* 1 */ vertical-align: baseline; /* 2 */ }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address `[hidden]` styling not present in IE 8/9/10. Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22. */
[hidden], template { display: none; }

/* Links ========================================================================== */
/** Remove the gray background color from active links in IE 10. */
a { background-color: transparent; }

/** Improve readability of focused elements when they are also in an active/hover state. */
a:active, a:hover { outline: 0; }

/* Text-level semantics ========================================================================== */
/** Address styling not present in IE 8/9/10/11, Safari, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari and Chrome. */
dfn { font-style: italic; }

/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9/10. */
img { border: 0; }

/** Correct overflow not hidden in IE 9/10/11. */
svg:not(:root) { overflow: hidden; }

/* Grouping content ========================================================================== */
/** Address margin not present in IE 8/9 and Safari. */
figure { margin: 1em 40px; }

/** Address differences between Firefox and other browsers. */
hr { box-sizing: content-box; height: 0; }

/** Contain overflow in all browsers. */
pre { overflow: auto; }

/** Address odd `em`-unit font size rendering in all browsers. */
code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

/* Forms ========================================================================== */
/** Known limitation: by default, Chrome and Safari on OS X allow very limited styling of `select`, unless a `border` property is set. */
/** 1. Correct color not being inherited. Known issue: affects color of disabled elements. 2. Correct font properties not being inherited. 3. Address margins set differently in Firefox 4+, Safari, and Chrome. */
button, input, optgroup, select, textarea { color: inherit; /* 1 */ font: inherit; /* 2 */ margin: 0; /* 3 */ }

/** Address `overflow` set to `hidden` in IE 8/9/10/11. */
button { overflow: visible; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera. Correct `select` style inheritance in Firefox. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
input { line-height: normal; }

/** It's recommended that you don't attempt to style these elements. Firefox's implementation doesn't respect box-sizing, padding, or width. 1. Address box sizing set to `content-box` in IE 8/9/10. 2. Remove excess padding in IE 8/9/10. */
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** Fix the cursor style for Chrome's increment/decrement buttons. For certain `font-size` values of the `input`, it causes the cursor style of the decrement button to change from `default` to `text`. */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button { height: auto; }

/** 1. Address `appearance` set to `searchfield` in Safari and Chrome. 2. Address `box-sizing` set to `border-box` in Safari and Chrome. */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ box-sizing: content-box; /* 2 */ }

/** Remove inner padding and search cancel button in Safari and Chrome on OS X. Safari (but not Chrome) clips the cancel button when the search input has padding (and `textfield` appearance). */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9/10/11. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** Remove default vertical scrollbar in IE 8/9/10/11. */
textarea { overflow: auto; }

/** Don't inherit the `font-weight` (applied by a rule above). NOTE: the default cannot safely be changed in Chrome and Safari on OS X. */
optgroup { font-weight: bold; }

/* Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

td, th { padding: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
/* The provided mixins are intended to be used with the array-like variables .icon-home { @include sprite-width($icon-home); } .icon-email { @include sprite($icon-email); } */
/* The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite. It should be used with a "retina group" variable. The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/ $icon-home-group: ('icon-home', $icon-home, $icon-home-2x, ); .icon-home { @include retina-sprite($icon-home-group); } */
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
h1, h2, h3, h4, h5, h6, html, body, p, ul, li, dl, dt, dd { padding: 0; margin: 0; }

img { vertical-align: top; }

ul li { list-style: none; }

em { font-style: normal; }

a { text-decoration: none; -webkit-tap-highlight-color: rgba(201, 224, 253, 0); }

body, html { height: 100%; }

body { font-family: "Helvetica Neue", Helvetica, DroidSansFallback, HeiTi SC, Arial, sans-serif; font-size: 14px; color: #FFF; background-color: #2E333D; }

a { color: #FFF; }

.container { height: 100%; position: relative; background-color: #2E333D; max-width: 640px; margin: 0 auto; }

header { height: 45px; line-height: 45px; padding-top: 20px; background-color: #343b4a; overflow: hidden; position: absolute; left: 0; right: 0; top: 0; z-index: 2; }

header h1 { text-align: center; font-size: 18px; font-weight: normal; }

header a { position: absolute; top: 20px; display: block; height: 45px; width: 50px; }

header a span { display: block; position: absolute; top: 12px; }

header .left-btn { left: 0; }

header .left-btn span { background-image: url(../img/sprite/icons.png); background-position: -89px -60px; width: 12px; height: 21px; left: 10px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { header .left-btn span { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

header .right-btn { right: 0; }

header .right-btn span { background-image: url(../img/sprite/icons.png); background-position: -119px -78px; width: 20px; height: 18px; right: 13px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { header .right-btn span { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar { height: 49px; line-height: 30px; border-top: 1px solid #3B4150; background-color: #343B4B; position: absolute; bottom: 0; left: 0; right: 0; overflow: hidden; z-index: 2; }

.navbar a { display: block; float: left; width: 25%; height: 49px; text-align: center; text-decoration: none; color: #BABABA; font-size: 12px; }

.navbar a.cur { color: #FFF; }

.navbar a:before { content: ''; display: block; margin: 6px auto -2px; background-image: url(../img/sprite/icons.png); background-position: 0px -84px; width: 35px; height: 21px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(2):before { background-image: url(../img/sprite/icons.png); background-position: -89px 0px; width: 28px; height: 28px; margin-top: 2px; margin-bottom: -5px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(2):before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(3):before { background-image: url(../img/sprite/icons.png); background-position: -119px 0px; width: 27px; height: 27px; margin-top: 3px; margin-bottom: -4px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(3):before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(4):before { background-image: url(../img/sprite/icons.png); background-position: 0px -53px; width: 29px; height: 29px; margin-top: 2px; margin-bottom: -6px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(4):before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(1).cur:before { background-image: url(../img/sprite/icons.png); background-position: -37px -84px; width: 35px; height: 21px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(1).cur:before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(2).cur:before { background-image: url(../img/sprite/icons.png); background-position: -89px -30px; width: 28px; height: 28px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(2).cur:before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(3).cur:before { background-image: url(../img/sprite/icons.png); background-position: -119px -29px; width: 27px; height: 27px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(3).cur:before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a:nth-child(4).cur:before { background-image: url(../img/sprite/icons.png); background-position: -31px -53px; width: 29px; height: 29px; }

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) { .navbar a:nth-child(4).cur:before { background-image: url(../img/sprite/icons@2x.png); background-size: 146px 105px; } }

.navbar a.has-news::after { content: ''; width: 8px; height: 8px; position: absolute; top: 3px; right: 7%; background: #F64356; border-radius: 100%; }

.navbar a.cur.has-news::after { width: 0; height: 0; }

.navbar .cur { background-color: #F64356; }

.content { position: absolute; top: 64px; bottom: 50px; left: 0; right: 0; overflow-y: auto; overflow-x: hidden; -webkit-overflow-scrolling: touch; }

.show { display: block !important; }

.hide { display: none !important; }

.db-pop { opacity: 0; transition: opacity 1s; position: absolute; left: 50%; top: -webkit-calc(50% - 50px); top: calc(50% - 50px); width: 95%; padding-bottom: 15px; text-align: center; -webkit-transform: translate(-50%, -50%); -moz-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); -o-transform: translate(-50%, -50%); transform: translate(-50%, -50%); background-color: #343b4a; box-shadow: 0 0 1px #FFF; z-index: 1; }

.db-pop .pop-con { padding: 10px 0 15px 0; text-align: center; line-height: 20px; font-size: 16px; }

.db-pop .pop-con .pop-con-title { height: 38px; line-height: 25px; }

.db-pop .cancel { display: inline-block; width: 35%; height: 35px; line-height: 35px; background: #3e4553; border-radius: 5px; color: #546a79; }

.db-pop .confirm { display: inline-block; width: 35%; height: 35px; line-height: 35px; background: #3288e0; border-radius: 5px; }

.db-pop .pop_btn { display: inline-block; width: 95%; }

.db-pop .pop_btn .cancel { width: 45%; float: left; }

.db-pop .pop_btn .confirm { width: 45%; float: right; }

.overlay { display: none; position: absolute; left: 0; right: 0; top: 0; bottom: 0; background-color: rgba(0, 0, 0, 0.4); z-index: 0; }

.loading-pop { width: 50%; height: 80px; background: #343b4a; position: absolute; top: -webkit-calc(50% - 50px); top: calc(50% - 50px); left: 50%; transform: translate(-50%, -50%); text-align: center; padding: 50px 0 40px 0; z-index: 1; }

.loading-pop .spinner { width: 70px; height: 70px; display: inline-block; position: relative; text-align: center; }

.loading-pop .dot1, .loading-pop .dot2 { width: 30%; height: 30%; position: relative; display: inline-block; background-color: #3262d4; border-radius: 100%; }

.loading-pop .dot1 { transform: translateX(-90%); animation: d1 2s infinite linear both; -webkit-animation: d1 2s infinite linear both; -moz-animation: d1 2s infinite linear both; animation: d1 2s infinite linear both; }

.loading-pop .dot2 { transform: translateX(110%); margin-left: -50%; background-color: #f3465a; animation: d2 2s infinite linear both; -webkit-animation: d2 2s infinite linear both; -moz-animation: d2 2s infinite linear both; animation: d2 2s infinite linear both; }

.loading-pop .txt { margin-top: -30px; color: #FFF; }

.loading-pop.s-loading { height: 60px; background: transparent; padding: 0; -webkit-transform: translate(-50%, 50%); -moz-transform: translate(-50%, 50%); -ms-transform: translate(-50%, 50%); -o-transform: translate(-50%, 50%); transform: translate(-50%, 50%); }

.loading-pop.s-loading-list { height: 60px; background: transparent; padding: 0; top: 0; transform: translate(-50%, 0); }

.end-data { height: 35px; line-height: 30px; text-align: center; }

.refresh-pop { position: absolute; top: 30%; left: 50%; margin-left: -100px; width: 200px; height: 200px; font-size: 16px; text-align: center; color: #929396; z-index: 1; }

.refresh-pop::before { content: ''; display: inline-block; margin: 20px auto; width: 63px; height: 53px; background: url(../img/sprite/refresh@2x.png) left top no-repeat; }

.refresh-pop.s-refresh { width: 150px; height: 100px; margin-left: -75px; }

.refresh-pop.s-refresh::before { width: 32px; height: 27px; margin: 10px auto; background-size: 100% auto; }

@-webkit-keyframes d1 { 0% { z-index: 1;
    -webkit-transform: translateX(-90%); }
  49% { z-index: 1; }
  50% { z-index: 2;
    -webkit-transform: translateX(10%); }
  99% { z-index: 2; }
  100% { z-index: 1;
    -webkit-transform: translateX(-90%); } }

@-moz-keyframes d1 { 0% { z-index: 1;
    -moz-transform: translateX(-90%); }
  49% { z-index: 1; }
  50% { z-index: 2;
    -moz-transform: translateX(10%); }
  99% { z-index: 2; }
  100% { z-index: 1;
    -moz-transform: translateX(-90%); } }

@keyframes d1 { 0% { z-index: 1;
    -webkit-transform: translateX(-90%);
    -moz-transform: translateX(-90%);
    -ms-transform: translateX(-90%);
    -o-transform: translateX(-90%);
    transform: translateX(-90%); }
  49% { z-index: 1; }
  50% { z-index: 2;
    -webkit-transform: translateX(10%);
    -moz-transform: translateX(10%);
    -ms-transform: translateX(10%);
    -o-transform: translateX(10%);
    transform: translateX(10%); }
  99% { z-index: 2; }
  100% { z-index: 1;
    -webkit-transform: translateX(-90%);
    -moz-transform: translateX(-90%);
    -ms-transform: translateX(-90%);
    -o-transform: translateX(-90%);
    transform: translateX(-90%); } }

@-webkit-keyframes d2 { 0% { z-index: 2;
    -webkit-transform: translateX(110%); }
  49% { z-index: 2; }
  50% { z-index: 1;
    -webkit-transform: translateX(-50%); }
  99% { z-index: 1; }
  100% { z-index: 2;
    -webkit-transform: translateX(110%); } }

@-moz-keyframes d2 { 0% { z-index: 2;
    -moz-transform: translateX(110%); }
  49% { z-index: 2; }
  50% { z-index: 1;
    -moz-transform: translateX(-50%); }
  99% { z-index: 1; }
  100% { z-index: 2;
    -moz-transform: translateX(110%); } }

@keyframes d2 { 0% { z-index: 2;
    -webkit-transform: translateX(110%);
    -moz-transform: translateX(110%);
    -ms-transform: translateX(110%);
    -o-transform: translateX(110%);
    transform: translateX(110%); }
  49% { z-index: 2; }
  50% { z-index: 1;
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%); }
  99% { z-index: 1; }
  100% { z-index: 2;
    -webkit-transform: translateX(110%);
    -moz-transform: translateX(110%);
    -ms-transform: translateX(110%);
    -o-transform: translateX(110%);
    transform: translateX(110%); } }

.content { background: #2d3340; }

.content.article_wrap { bottom: 0; }

#suggest-form { height: 60%; margin: 0 2%; }

@media only screen and (-webkit-min-device-pixel-ratio: 1), only screen and (min--moz-device-pixel-ratio: 1), only screen and (-o-min-device-pixel-ratio: 1 / 1), only screen and (min-resolution: 96dpi), only screen and (min-resolution: 1dppx) { #suggest-form { border-bottom: 1px solid #34424c; } }

@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) { #suggest-form { border: none; position: relative; }
  #suggest-form:before { content: ""; position: absolute; bottom: -1px; left: 0; width: 100%; height: 1px; border-bottom: 1px solid #34424c; z-index: 1; -webkit-transform: scaleY(0.5); -moz-transform: scaleY(0.5); -ms-transform: scaleY(0.5); -o-transform: scaleY(0.5); transform: scaleY(0.5); } }

@media only screen and (-webkit-min-device-pixel-ratio: 3), only screen and (min--moz-device-pixel-ratio: 3), only screen and (-o-min-device-pixel-ratio: 3 / 1), only screen and (min-resolution: 288dpi), only screen and (min-resolution: 3dppx) { #suggest-form { border: none; position: relative; }
  #suggest-form:before { content: ""; position: absolute; bottom: -1px; left: 0; width: 100%; height: 1px; border-bottom: 1px solid #34424c; z-index: 1; -webkit-transform: scaleY(0.33); -moz-transform: scaleY(0.33); -ms-transform: scaleY(0.33); -o-transform: scaleY(0.33); transform: scaleY(0.33); } }

.input_suggest { position: absolute; box-sizing: border-box; width: 100%; padding: 2%; height: 100%; border: none; background: #2d3340; color: #FFF; resize: none; }

.input_suggest::-webkit-input-placeholder { color: #4b5363; }

.input_suggest::-moz-placeholder { color: #4b5363; }

.input_suggest:-moz-placeholder { color: #4b5363; }

.input_suggest:-ms-input-placeholder { color: #4b5363; }

header .right-btn span { background: none; width: 43px; height: 23px; line-height: 23px; text-align: center; border: 1px solid #3288e0; border-radius: 7px; color: #3288e0; }

header .right-btn span::after { content: '提交'; }

header .right-btn span.disable { color: #546a79; border: 1px solid #546a79; }

.article { padding: 10px; line-height: 23px; }

.article p { padding-bottom: 20px; text-align: justify; }

.about { font-size: 14px; line-height: 23px; color: #546a79; text-align: center; }

.about .about_logo { display: block; width: 38%; margin: 30px auto; }

.about p { padding: 0 15px; text-align: justify; }

.about_footer { position: fixed; left: 50%; bottom: 5px; -webkit-transform: translate(-50%); -moz-transform: translate(-50%); -ms-transform: translate(-50%); -o-transform: translate(-50%); transform: translate(-50%); }

/*# sourceMappingURL=data:application/json;base64, */
